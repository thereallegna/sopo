import React from 'react';
import { Button } from '@components/ui/Button';
import { IconPrinter } from '@tabler/icons-react';
import IconComponent from '@components/ui/Icon';
import JsPDF from 'jspdf';
import autoTable from 'jspdf-autotable';

interface PrintButtonProps {
  data: any[];
  columns: any[];
}

const PrintButton: React.FC<PrintButtonProps> = ({ data, columns }) => {
  const generatePdf = () => {
    if (data.length === 0) {
      alert('No data available to print!');
      return;
    }

    const doc = new JsPDF();
    const padding = 10;
    const titleY = 20;

    doc.setFontSize(18);
    doc.text('Company Report', padding, titleY);
    doc.setFontSize(12);
    doc.text('Generated by RUN System Inc.', padding, titleY + 10);
    doc.setFontSize(10);
    doc.text(`Date: ${new Date().toLocaleDateString()}`, padding, titleY + 20);

    const headers = [...columns.map((col) => col.header || col.accessorKey)];

    const tableData = data.map((item) => [
      ...columns.map((col) => item[col.accessorKey]),
    ]);

    console.log('Headers:', headers);
    console.log('Table Data:', tableData);

    autoTable(doc, {
      head: [headers],
      body: tableData,
      startY: titleY + 30,
      margin: { top: 0, left: padding, right: padding, bottom: padding },
    });

    const pdfBlob = doc.output('blob');
    const url = URL.createObjectURL(pdfBlob);
    window.open(url);
  };

  return (
    <Button
      variant="outlined"
      title="Print"
      onClick={generatePdf}
      className="w-[80px]"
    >
      <IconComponent
        icon={IconPrinter}
        size="large"
        color="quaternary"
        className="mr-2"
      />
      Print
    </Button>
  );
};

export default PrintButton;
